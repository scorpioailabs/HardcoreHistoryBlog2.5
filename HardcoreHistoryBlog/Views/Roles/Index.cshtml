@using HardcoreHistoryBlog.Data
@model IEnumerable<HardcoreHistoryBlog.ViewModels.RoleListViewModel>

@{
    ViewData["Title"] = "Roles";
}

<h2>Available Roles</h2>


<table class="table table-bordered table-hover">
    <tr>
        <th class="d-sm-table-cell">
            Role Name
        </th>
        <th class="d-sm-table-cell">
            Description
        </th>
        <th class="d-sm-table-cell">
            Number of Users
        </th>

    </tr>
    @foreach (var item in Model)
    {
    <tr>
        <td class="d-sm-table-cell">
            @item.RoleName
        </td>
        <td class="d-sm-table-cell">
           @item.Description
        </td>
        <td class="d-sm-table-cell">
            @Html.DisplayFor(modelItem => item.NumberOfUsers)
        </td>
        <td class="d-sm-table-cell">
            <a asp-controller="Roles" asp-action="Details" asp-route-id="@item.Id">Details</a>
        </td>
        <td class="d-sm-table-cell">
            <a asp-controller="Roles" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
        </td>
        <td class="d-sm-table-cell">
            <a asp-controller="Roles" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
        </td>
    </tr>
    }
</table>
</br>
<section class="col-sm-6">
    <table class="table-bordered">
        @Html.ActionLink("Create Role", "Create", "Roles")
    </table>

</section>

<section class="col-sm-6">
    <table class="table-bordered">
        @Html.ActionLink("Assign Role to User", "UserRoles", "Roles")
    </table>
</section>

